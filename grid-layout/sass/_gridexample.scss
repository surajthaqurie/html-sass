// Method 1: LINE NUMBERS

/*
.challenge {
  width: 1000px;
  margin: 30px auto;
  
  display: grid;
  grid-template-rows: 100px 200px 400px 100px;
  grid-template-columns: repeat(3, 1fr) 200px; 
  grid-gap: 30px;
  
  
  & > * {
    background-color: orangered;
    padding: 20px;
    color: white;
    font-size: 30px;
    font-family: sans-serif;
  }
  
  .header {
    grid-column: 1 / -1;
  }
  
  .sidebar {
    grid-column: 4 / 5;
    grid-row: 2 / span 2;
  }
  
  .main-content {
    grid-column: 1 / span 3;
  }
  
  .footer {
    grid-column: 1 / -1;
  }
  
}
*/

// Method 2: LINE NAMES: 
/*
.challenge {
  width: 1000px;
  margin: 30px auto;
  
  display: grid;
  // line name declaration: [name of first line-start] 100px [nameoffirstline-end nameofsecondlin-start]
  grid-template-rows: [header-start] 100px [header-end box-start] 200px [box-end main-start] 400px [main-end footer-start]100px [footer-end];
  
  // In fr: it automatically create col-start 1 col-start 2 and on end col-end 1 col-end 2 and soon..
  grid-template-columns: repeat(3,[col-start] 1fr [col-end]) 200px [grid-end]; 
  
  // gutter space of rows and columns
  grid-gap: 30px;
  
  
  & > * {
    background-color: orangered;
    padding: 20px;
    color: white;
    font-size: 30px;
    font-family: sans-serif;
  }
  
  .header {
    // grid-column: 1 / -1;
    
     // Use of  Column LINE NAMES
    grid-column :col-start 1 / grid-end;
  }
  
  .sidebar {
    // grid-column: 4 / 5;
    // grid-row: 2 / span 2;
       
    // Use of  Column LINE NAMES
    grid-column : col-end 3  / grid-end;
       
    // Use of  Row LINE NAMES
    grid-row: box-start / main-end;
  }
  
  .main-content {
    // grid-column: 1 / span 3;
    
    // Use of  Column LINE NAMES
    grid-column : col-start 1  / col-end 3;
       
    }
  
  .footer {
    // grid-column: 1 / -1;
    
    // Use of  Column LINE NAMES
    grid-column : col-start 1  / grid-end;
       
  }
  
}
*/

// Method 3: NAME GRID AREAS : Small simple (4 by 4, 5 by 5)layouts

.challenge {
  width: 1000px;
  margin: 30px auto;
  
  display: grid;
  grid-template-rows: 100px 200px 400px 100px;
  grid-template-columns: repeat(3, 1fr) 200px; 
  grid-gap: 30px;
  
  // Declaration: Name Grid Areas: we write a couple od strings, and in there we basically give each grid cell a name (here, 4 by 4 grid  = 16 grid cell)
  
  // grid-template-areas:"head head head head"
  //                      "box box box side"
  //                      "main main main side"
  //                      "foot foot foot foot";    
  
  
  
  // To actually leave empty cells and all habe to do for that, is instead just delete it, is to put dot(.)
   grid-template-areas:". head head ."
                       "box-1 box-2 box-3 side"
                       "main main main side"
                       "foot foot foot foot";    
  
  
  & > * {
    background-color: orangered;
    padding: 20px;
    color: white;
    font-size: 30px;
    font-family: sans-serif;
  }
  
  .header {
    // grid-column: 1 / -1;
    
    // use of Name Grid Areas 
    grid-area: head;
    
  }
  
  .small-box-1{
    grid-area: box-1;
  }
  
    .small-box-2{
    grid-area: box-2;
  }
  
  .small-box-3{
    grid-area: box-3;
    
  }
  
  .sidebar {
    // grid-column: 4 / 5;
    // grid-row: 2 / span 2;
    
    grid-area: side
    
  }
  
  .main-content {
    // grid-column: 1 / span 3;
    
    grid-area: main;
  }
  
  .footer {
    // grid-column: 1 / -1;
    
    grid-area: foot;
  }
  
}
