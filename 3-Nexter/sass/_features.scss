.features {
    // background-color: $color-grey-light-2;
     
    grid-column: center-start / center-end;

    margin: 15rem 0;

    /*
     // subgrid property are not realses now in grid so here we done it manaully
    display: grid;  
    // grid-template-columns: repeat(3, 1fr);

    grid-template-columns: repeat(auto-fit,(minmax(25rem, 1fr)));
    // grid-template-rows: auto auto;   // here we donot need to define row it create implicit grid

    grid-gap: 6rem;

    align-items: start;
    */
   

    @supports(display: grid){

     // subgrid property are not realses now in grid so here we done it manaully
    display: grid;  
    // grid-template-columns: repeat(3, 1fr);

    grid-template-columns: repeat(auto-fit,(minmax(25rem, 1fr)));
    // grid-template-rows: auto auto;   // here we donot need to define row it create implicit grid

    grid-gap: 6rem;

    align-items: start;
    }
}

.feature {
    
    // if browser not support grid layout
    float: left;
    width: 33.3333%;
    margin-bottom: 6rem;

    @supports(display: grid){
        width: auto;
        margin-bottom: 0;
    }


    display: grid;
    grid-template-columns: min-content 1fr;
    
    // grid-row-gap: replaced by row-gap | grid-column-gap: replaced by column-gap
    row-gap: 1.5rem;
    column-gap: 2.5rem;

    &__icon {
        fill: $color-primary;
        width: 4.5rem;
        height: 4.5rem;

        // This minus one here, this means not the end of grid but end of the explicit grid
        // grid-row: 1 / -1;
        grid-row: 1 / span 2; 

        transform: translateY(-1rem);
        
    }

    &__text {
        font-size: 1.7rem;
    }
}